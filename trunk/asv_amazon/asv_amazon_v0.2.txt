<?php

$plugin='a:8:{s:4:"name";s:10:"asv_amazon";s:6:"author";s:10:"Amit Varia";s:10:"author_uri";s:24:"http://www.amitvaria.com";s:7:"version";s:3:"0.2";s:11:"description";s:70:"A simple plugin to display basic information about any Amazon product.";s:4:"help";s:4386:"<h1>asv_amazon</h1>
<h2>List mode
attributes</h2>
<p>asin = <em>&quot;Amazon
  Standard
  Item Number&quot;
  - The &quot;asin&quot; attribute
      is required
      and is
      the unique
      identifier
      of the
      product.
      You can
      find
  the ASIN
  by visiting
      the site
      of the
      product
      on Amazon.
      The ASIN
      will
  be the 10
      digit
  number in
  the URL.</em></p>
<p>[locale]
  = The &quot;locale&quot;
  attribute
  is optional
  and is by
  default set
  to US. You
  can use the
  following
  locales:</p>
<ul>
  <li>us -
    United
    States</li>
  <li>uk -
    United
    Kingdom</li>
  <li>de -
    Denmark</li>
  <li>jp -
    Japan</li>
  <li>fr -
    France </li>
  <li>ca -
    Canada </li>
</ul>
<p>[cache]
  = true/false.
  The &quot;cache&quot;
  attribute
  is optional
  and is set
  by default
  to &quot;false&quot;.
  If you want
  to store
  the XML data
  locally,
  then set
  &quot;cache&quot; to
  &quot;true&quot;. The
  cached file
  will maintain
  for 24 hours.</p>
<p>[cacheimg]
  = none/small/medium/large.
  The &quot;cacheImage&quot;
  attribute
  is optional
  and is set
  by default
  to none.
  If you want
  to store
  the image
  locally then
  you can set
  this attribute
  to download
  the image
  size you
  want to use
  to your local
  tmp folder
  and it will
  refresh every
  24 hours. </p>
<h2>Usage</h2>
<p><strong>&lt;txp:asv_amazon
    [attributes]&gt;<br />
  [layout]<br />
&lt;/txp:asv_amazon&gt;</strong></p>
<p>In between
  the tags
  you can include
  the layout
  of the data.
  There will
  be 4 pieces
  of information
  currently
  available
  to you:</p>
<ul>
  <li><strong>asv_DetailPageURL</strong>    - The URL
    for the
    product
    on the
    Amazon
    site</li>
  <li><strong>asv_SmallImageURL</strong>    - The URL
    for the
    smallest
    image of
    the product</li>
  <li><strong>asv_MediumImageURL</strong>    - The URL
    for the
    medium
    size image
    of the
    product</li>
  <li><strong>asv_LargeImageURL </strong>- The URL
    for the
    largest
    image of
    the product</li>
  <li><strong>asv_Title </strong>- The name
    of the
    product</li>
</ul>
<p>You can
  include your
  own layout
  of the data
  in between
  the &lt;txp:asv_amazon&gt;
  tags. If
  you do not
  include this
  information,
  there will
  be a default
  layout given:</p>
<p>&lt;a href=&quot;asv_DetailPageURL&quot;&gt;&lt;img
  src=&quot;asv_SmallImageURL&quot; /&gt;&lt;br
/&gt;asv_Title&lt;/a&gt;&lt;br
/&gt; </p>
<p><em>Example:</em></p>
<p>&lt;txp:asv_amazon
  asin=&quot;0374292884&quot;&gt;<br />
&lt;a href=&quot;asv_DetailPageURL&quot;&gt;&lt;img
  src=&quot;asv_SmallImageURL&quot; /&gt;&lt;br
  /&gt;asv_Title&lt;/a&gt;<br />
&lt;/txp:asv_amazon&gt;</p>
<p><em>Output:</em></p>
<p> &lt; a
  href = "http://www.amazon.com/exec/obidos/redirect?tag=ws%26link_code=xm2%26camp=2025%26creative=165953%26path=http://www.amazon.com/gp/redirect.html%253fASIN=1578518520%2526tag=ws%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/1578518520%25253FSubscriptionId=0XEQBETVCS700MG1E4R2" &gt;&lt; img
  src = "http://images.amazon.com/images/P/1578518520.01._SCTHUMBZZZ_.jpg" / &gt;&lt; br
  / &gt;The
  Innovator's
  Solution:
  Creating
  and Sustaining
  Successful
  Growth&lt;/
  a &gt;&lt; br
/ &gt; </p>
<h2>ChangeLog</h2>
<ul>
  <li>0.1    <ul>
      <li>Pulls
          
         XML
        file
          
         from
          
         Amazon's
          
         server
          
         and
          
         extracts
          
         Product
          
         Name,
          
         Product
          
         URL,
          
         and
        Small/Medium/Large
          
         Image
      URL.</li>
      <li>You
        can
        set
        the
        locale
        and
        ASIN </li>
  </ul>
  </li>
  <li>0.2
    <ul>
      <li>Choose
        to
        cache
        the
        images
        and
        XML
        file
        locally
        in
        the
        &quot;textpattern/tmp&quot;
        folder </li>
    </ul>
  </li>
</ul>";s:4:"code";s:8431:"	class AmazonParser{
	/* This class is a helper to the asv_amazon function. The purpose of this class is to parse the xml data and return the information to the asv_amazon function.*/
		var $asv_contents;	//hold all the data to return
		var $asv_flag = '';	//hold the current tag name
		var $asin;			//hold the ASIN of the product
		var $locale;		//hold the locale of the product
		var $cacheimg;	//whether or not to cache the image
		
		function AmazonParser($locale, $asin, $cacheimg){
			$this->asin = $asin;
			$this->locale = $locale;
			$this->cacheimg = $cacheimg;
		}
		
		function startElement($parser, $tagName, $attrs){
			switch ($tagName) {
				case "DetailPageURL":
					$this->asv_flag = $tagName;
					break;
				case "SmallImage":
					$this->asv_flag = $tagName;
					break;
				case "MediumImage":
					$this->asv_flag = $tagName;
					break;
				case "LargeImage":
					$this->asv_flag = $tagName;
					break;
				case "ItemAttributes":
					$this->asv_flag = $tagName;
					break;
				case "URL":
					if($this->asv_flag == "SmallImage")
						$this->asv_flag = "SmallImageURL";
					if($this->asv_flag == "MediumImage")
						$this->asv_flag = "MediumImageURL";
					if($this->asv_flag == "LargeImage")
						$this->asv_flag = "LargeImageURL";
					break;
				case "Title":
					if($this->asv_flag == "ItemAttributes")
						$this->asv_flag = "Title";
					break;
			}
		}
		
		function endElement($parser, $tagName){
		}
		
		function characterData($parser, $data){
			switch ($this->asv_flag) {
				case "DetailPageURL":
					$this->asv_contents["asv_".$this->asv_flag] = $data;
					$this->asv_flag = '';
					break;
				case "SmallImageURL":
					if($this->cacheimg == "small"){
						if(!(	file_exists("textpattern/tmp/".$this->locale."-".$this->asin."-small.jpg") && (time() - (fileatime("textpattern/tmp/".$this->locale."-".$this->asin."-small.jpg")) < 8640000))){
							copy($data, "textpattern/tmp/".$this->locale."-".$this->asin."-small.jpg");
						}
						$this->asv_contents["asv_".$this->asv_flag] = "textpattern/tmp/".$this->locale."-".$this->asin."-small.jpg";
					}
					$this->asv_contents["asv_".$this->asv_flag] = $data;
					$this->asv_flag = '';
					break;
				case "MediumImageURL":
					if($this->cacheimg == "medium"){
						if(!(	file_exists("textpattern/tmp/".$this->locale."-".$this->asin."-medium.jpg") && (time() - (fileatime("textpattern/tmp/".$this->locale."-".$this->asin."-medium.jpg")) < 8640000))){
							copy($data, "textpattern/tmp/".$this->locale."-".$this->asin."-medium.jpg");
						}
						$this->asv_contents["asv_".$this->asv_flag] = "textpattern/tmp/".$this->locale."-".$this->asin."-medium.jpg";
					}
					$this->asv_contents["asv_".$this->asv_flag] = $data;
					$this->asv_flag = '';
					break;
				case "LargeImageURL":
					if($this->cacheimg == "large"){
						if(!(	file_exists("textpattern/tmp/".$this->locale."-".$this->asin."-large.jpg") && (time() - (fileatime("textpattern/tmp/".$this->locale."-".$this->asin."-large.jpg")) < 8640000))){
							copy($data, "textpattern/tmp/".$this->locale."-".$this->asin."-large.jpg");
						}
						$this->asv_contents["asv_".$this->asv_flag] = "textpattern/tmp/".$this->locale."-".$this->asin."-large.jpg";
					}
					$this->asv_contents["asv_".$this->asv_flag] = $data;
					$this->asv_flag = '';
					break;
				case "Title":
					$this->asv_contents["asv_".$this->asv_flag] = $data;
					$this->asv_flag = '';
					break;
			}
		}
		
		function getDetailPageURL(){
			return $this->asv_contents["asv_DetailPageURL"];
		}
		
		function getSmallImageURL(){
			return $this->asv_contents['asv_SmallImageURL'];
		}
		
		function getMediumImageURL(){
			return $this->asv_contents["asv_MediumImageURL"];
		}
		
		function getLargeImageURL(){
			return $this->asv_contents["asv_LargeImageURL"];
		}
		
		function getTitle(){
			return $this->asv_contents["asv_Title"];
		}
		
		function getContentsArray(){
			return $this->asv_contents;
		}
		
	}
	function asv_amazon($att, $thing=''){
	/* asv_amazon is the main function for the plugin. When the plugin tags are inserted into the page, this function will be called.
		$att - an array that holds the following values: $asin, [$locale, $cache, $cacheimg]
		$thing - a string that holds the string in between the open an close tags of this plugin
	*/
	
		//Make sure that the array $att is a proper array before extracting all the contents into variable names of their keys
		is_array($att) ? extract($att) : die("asv_amazon: Please refer to the manual to properly define the asv_amazon tag.");
		//An ASIN must be provided for this plugin
		if(!isset($asin)) {die("You must specify the ASIN (Amazon Standard Item Number) for the product that you want to display. The ASIN is a 10 digit number found in the URL of the product detail page.");}
		//If no locale is set, then by default it is set to US
		if(!isset($locale))	{$locale = "us";}
		//cacheimg should be either small, medium, or large. By default cacheimg is set to none (this means not to cache the image).
		if(!isset($cacheimg)) {$cacheimg = "none";}
		//cache should either be true or false. By default cache is set to false (this means not to cache the xml page of data for the product).
		if($cache != "true") {$cache = "none";}
		//Use this folder to hold all the cache data
		$tmp_folder = "textpattern/tmp";
		//If caching and the file is stored locally is less than a day old, use the local file
		if(($cache == "true") && file_exists("$tmp_folder/$locale-$asin.xml") && (time() - (fileatime("$tmp_folder/$locale-$asin.xml")) < 8640000)){$url = "$tmp_folder/$locale-$asin.xml";}
		//Otherwise go grab the xml file
		else{
			$base = '';
			//Set the base url to the appropriate locale
			switch ($locale) {
				case "us":
					$base = 'http://webservices.amazon.com/onca/xml';
					break;
				case "uk":
					$base = 'http://webservices.amazon.co.uk/onca/xml';
					break;
				case "de":
					$base = 'http://webservices.amazon.de/onca/xml';
					break;
				case "jp":
					$base = 'http://webservices.amazon.co.jp/onca/xml';
					break;
				case "fr":
					$base = 'http://webservices.amazon.fr/onca/xml';
					break;
				case "ca":
					$base = 'http://webservices.amazon.ca/onca/xml';
					break;
			}		
			$query_string = '';			
			$params = array( 
				'Service' => 'AWSECommerceService',
				'SubscriptionId' => '0DZWD9BKQ6DHPH4XA2G2' , // You can specify your own developer tag if you have registered to be an Amazon web services developer
				'Operation' => 'ItemLookup',
				'ItemId' => $asin,
				'ResponseGroup' => 'Medium',
			);		
			foreach ($params as $key => $value) { 
				$query_string .= "$key=" . urlencode($value) . "&";
			}
			//Build the url
			$url = "$base?$query_string"; 
			//If caching then store the xml file locally
			if($cache == "true"){
				copy($url, "textpattern/tmp/$locale-$asin.xml");
				$url = "textpattern/tmp/$locale-$asin.xml";
			}
			
		}
		//Set up the parser - to understand this I suggest the following tutorial: http://www.sitepoint.com/article/php-xml-parsing-rss-1-0 	
		$parser = xml_parser_create(); 
		$amazon_parser = &new AmazonParser($locale, $asin, $cacheimg);
		xml_set_object($parser, $amazon_parser);
		xml_parser_set_option($parser, XML_OPTION_CASE_FOLDING, false);
		xml_set_element_handler($parser, "startElement", "endElement");
		xml_set_character_data_handler($parser, "characterData");
		
		if (!($fp = fopen($url, "r"))) {
			die("could not open XML input");
		}
		
		while ($data = fread($fp, 4096)) {
			if (!xml_parse($parser, $data, feof($fp))) {
				die(sprintf("XML error: %s at line %d",
							xml_error_string(xml_get_error_code($parser)),
							xml_get_current_line_number($parser)));
			}
		}
		
		xml_parser_free($parser);
		
		//Grab the contents from the AmazonParser Class
		$asv_contents = $amazon_parser->getContentsArray();
		
		//Properly synthesize the HTML to return
		if($thing){
			foreach($asv_contents as $key=>$value){
				$thing = str_replace($key, $value, 	$thing);
			}
		}
		else{
			$thing = "<a href=\"".$asv_contents['asv_DetailPageURL']."\"><img src=\"".$asv_contents['asv_SmallImageURL']."\" /><br />".$asv_contents['asv_Title']."</a><br />";
		}

		return $thing;
	}";s:3:"md5";s:32:"8c1c46f6b4190b865dd41b4c60fa0265";}'
?>