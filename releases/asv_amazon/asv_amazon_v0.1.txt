<?php

$plugin='a:8:{s:4:"name";s:10:"asv_amazon";s:6:"author";s:10:"Amit Varia";s:10:"author_uri";s:24:"http://www.amitvaria.com";s:7:"version";s:3:"0.1";s:11:"description";s:70:"A simple plugin to display basic information about any Amazon product.";s:4:"help";s:3134:"<p>This plugin
  will allow
  TXP users
  to include
  products
  from Amazon's
  website on
  to their
  site.</p>
<p><em>How
    to use:<br />
    </em>Use
    the tag
    &lt;txp:asv_amazon
    asin=[ASIN]
    locale=[LOCALE]&gt;[LAYOUT]&lt;/txp:asv_amazon&gt;.</p>
<p>The &quot;asin&quot;
      attribute
      is required
      and is
      the unique
      identifier
      of the
      product.
      You can
      find
  the ASIN
  by visiting
      the site
      of the
      product
      on Amazon.
      The ASIN
      will
  be the 10
      digit
  number in
  the URL.</p>
<p>The &quot;locale&quot;
  attribute
  is optional
  and is by
  default set
  to US. You
  can use the
  following
  locales:</p>
<ul>
  <li>us -
    United
    States</li>
  <li>uk -
    United
    Kingdom</li>
  <li>de -
    Denmark</li>
  <li>jp -
    Japan</li>
  <li>fr -
    France </li>
  <li>ca -
    Canada </li>
</ul>
<p>In between
  the tags
  you can include
  the layout
  of the data.
  There will
  be 4 pieces
  of information
  currently
  available
  to you:</p>
<ul>
  <li><strong>asv_DetailPageURL</strong>    - The URL
    for the
    product
    on the
    Amazon
    site</li>
  <li><strong>asv_SmallImageURL</strong>    - The URL
    for the
    smallest
    image of
    the product</li>
  <li><strong>asv_MediumImageURL</strong>    - The URL
    for the
    medium
    size image
    of the
    product</li>
  <li><strong>asv_LargeImageURL </strong>- The URL
    for the
    largest
    image of
    the product</li>
  <li><strong>asv_Title </strong>- The name
    of the
    product</li>
</ul>
<p>You can
  include your
  own layout
  of the data
  in between
  the &lt;txp:asv_amazon&gt;
  tags. If
  you do not
  include this
  information,
  there will
  be a default
  layout given:</p>
<p>&lt;a href=&quot;asv_DetailPageURL&quot;&gt;&lt;img
  src=&quot;asv_SmallImageURL&quot; /&gt;&lt;br
/&gt;asv_Title&lt;/a&gt;&lt;br
/&gt; </p>
<p><em>Example:</em></p>
<p>&lt;txp:asv_amazon
  asin=&quot;0374292884&quot;&gt;<br />
&lt;a href=&quot;asv_DetailPageURL&quot;&gt;&lt;img
  src=&quot;asv_SmallImageURL&quot; /&gt;&lt;br
  /&gt;asv_Title&lt;/a&gt;<br />
&lt;/txp:asv_amazon&gt;</p>
<p><em>Output:</em></p>
<p> &lt; a
  href = "http://www.amazon.com/exec/obidos/redirect?tag=ws%26link_code=xm2%26camp=2025%26creative=165953%26path=http://www.amazon.com/gp/redirect.html%253fASIN=1578518520%2526tag=ws%2526lcode=xm2%2526cID=2025%2526ccmID=165953%2526location=/o/ASIN/1578518520%25253FSubscriptionId=0XEQBETVCS700MG1E4R2" &gt;&lt; img
  src = "http://images.amazon.com/images/P/1578518520.01._SCTHUMBZZZ_.jpg" / &gt;&lt; br
  / &gt;The
  Innovator's
  Solution:
  Creating
  and Sustaining
  Successful
  Growth&lt;/
  a &gt;&lt; br
/ &gt; </p>
<p><em>Further
    Development:</em></p>
<p>Right now
  the plugin
  just pulls
  product URL,
  image URL,
  and product
    name from
    the Amazon
website. I'm
  hoping to
  add wishlists
  in the next
  version. </p>";s:4:"code";s:4186:"	$asv_flag = '';
	$asv_contents = array();
    function opening_element($parser, $element, $attributes) {
    /* opening XML element callback function */
    	global $asv_flag;
		switch ($element) {
			case "DetailPageURL":
				$asv_flag = $element;
				break;
			case "SmallImage":
				$asv_flag = $element;
				break;
			case "MediumImage":
				$asv_flag = $element;
				break;
			case "LargeImage":
				$asv_flag = $element;
				break;
			case "ItemAttributes":
				$asv_flag = $element;
				break;
			case "URL":
				if($asv_flag == "SmallImage")
					$asv_flag = "SmallImageURL";
				if($asv_flag == "MediumImage")
					$asv_flag = "MediumImageURL";
				if($asv_flag == "LargeImage")
					$asv_flag = "LargeImageURL";
				break;
			case "Title":
				if($asv_flag == "ItemAttributes")
					$asv_flag = "Title";
				break;
		}
    }
    
    function closing_element($parser, $element) {
    /* closing XML element callback function */
    	
    }
    
    function character_data($parser, $data) {
    /* callback function for character data */
		global $asv_flag;
		global $asv_contents;
		switch ($asv_flag) {
			case "DetailPageURL":
				$asv_contents["asv_".$asv_flag] = $data;
				$asv_flag = '';
				break;
			case "SmallImageURL":
				$asv_contents["asv_".$asv_flag] = $data;
				$asv_flag = '';
				break;
			case "MediumImageURL":
				$asv_contents["asv_".$asv_flag] = $data;
				$asv_flag = '';
				break;
			case "LargeImageURL":
				$asv_contents["asv_".$asv_flag] = $data;
				$asv_flag = '';
				break;
			case "Title":
				$asv_contents["asv_".$asv_flag] = $data;
				$asv_flag = '';
				break;
		}
    }
	function asv_amazon($att, $thing=''){
	
	global $asv_contents;
	
	if(is_array($att)){
		extract($att);
	}
	else{
		die("asv_amazon: Please refer to the manual to properly define the asv_amazon tag.");
	}
	
	if(!isset($asin)){
		die("You must specify the ASIN (Amazon Standard Item Number) for the product that you want to display. The ASIN
		is a 10 digit number found in the URL of the product detail page.");
	}
	if(!isset($locale)){
		$locale = "us";
	}
	$base = '';
	switch ($locale) {
		case "us":
			$base = 'http://webservices.amazon.com/onca/xml';
			break;
		case "uk":
			$base = 'http://webservices.amazon.co.uk/onca/xml';
			break;
		case "de":
			$base = 'http://webservices.amazon.de/onca/xml';
			break;
		case "jp":
			$base = 'http://webservices.amazon.co.jp/onca/xml';
			break;
		case "fr":
			$base = 'http://webservices.amazon.fr/onca/xml';
			break;
		case "ca":
			$base = 'http://webservices.amazon.ca/onca/xml';
			break;
	}

    $query_string = '';
    
    $params = array( 
        'Service' => 'AWSECommerceService',
        'SubscriptionId' => '0DZWD9BKQ6DHPH4XA2G2' , // You can specify your own developer tag if you have registered to be an Amazon web services developer
        'Operation' => 'ItemLookup',
        'ItemId' => $asin,
        'ResponseGroup' => 'Medium',
    );

    foreach ($params as $key => $value) { 
        $query_string .= "$key=" . urlencode($value) . "&";
    }

    $url = "$base?$query_string";    
    
   // $xml = file_get_contents($url);
        
    $parser = xml_parser_create(); 
    xml_parser_set_option($parser, XML_OPTION_CASE_FOLDING, false);
    xml_set_element_handler($parser, "opening_element", "closing_element");
    xml_set_character_data_handler($parser, "character_data");
    
   	if (!($fp = fopen($url, "r"))) {
		die("could not open XML input");
	}
	
	while ($data = fread($fp, 4096)) {
		if (!xml_parse($parser, $data, feof($fp))) {
			die(sprintf("XML error: %s at line %d",
						xml_error_string(xml_get_error_code($parser)),
						xml_get_current_line_number($parser)));
		}
	}
    
    xml_parser_free($parser);
	if($thing){
		foreach($asv_contents as $key=>$value){
			$thing = str_replace($key, $value, 	$thing);
		}
	}
	else{
		$thing = "<a href=\"".$asv_contents['asv_DetailPageURL']."\"><img src=\"".$asv_contents['asv_SmallImageURL']."\" /><br />".$asv_contents['asv_Title']."</a><br />";
	}
	return $thing;
	}";s:3:"md5";s:32:"4011c1434a8212f86b8ba7790f35c410";}'
?>